{"ast":null,"code":"// import axios from 'axios'; // Removed unused import\n\nexport default {\n  name: 'DeviceManagement',\n  data() {\n    return {\n      devices: [],\n      loading: false\n      // Add dialog visibility and form data for add/edit later\n    };\n  },\n  created() {\n    this.fetchDevices();\n  },\n  methods: {\n    async fetchDevices() {\n      this.loading = true;\n      try {\n        const response = await this.$http.get('/devices'); // Assumes baseURL '/api' is set for $http\n        this.devices = response.data || []; // Ensure devices is an array even if response.data is null/undefined\n      } catch (error) {\n        console.error(\"获取设备列表失败:\", error);\n        this.$message.error('获取设备列表失败，请稍后重试。');\n        this.devices = []; // Clear devices on error\n      } finally {\n        this.loading = false;\n      }\n    },\n    formatDate(dateArray) {\n      if (!dateArray) return '';\n      // LocalDate from backend might be an array [year, month, day]\n      // or a string \"YYYY-MM-DD\"\n      if (Array.isArray(dateArray)) {\n        const [year, month, day] = dateArray;\n        return `${year}-${String(month).padStart(2, '0')}-${String(day).padStart(2, '0')}`;\n      } else if (typeof dateArray === 'string') {\n        return dateArray.split('T')[0]; // Handle ISO string if backend serializes it that way\n      }\n      return String(dateArray); // Fallback\n    },\n    statusTagType(status) {\n      if (status === '运行中' || status === '正常') return 'success';\n      if (status === '故障') return 'danger';\n      if (status === '维护中') return 'warning';\n      if (status === '停止') return 'info';\n      return ''; // default\n    },\n    openAddDeviceDialog() {\n      // TODO: Implement logic to open add device dialog\n      this.$message.info('添加设备功能待实现');\n    },\n    handleEdit(row) {\n      // TODO: Implement logic to open edit device dialog with row data\n      this.$message.info(`编辑设备 ${row.name} 功能待实现`);\n      console.log('Edit device:', row);\n    },\n    handleDelete(row) {\n      // TODO: Implement logic for delete confirmation and API call\n      this.$message.warning(`删除设备 ${row.name} 功能待实现`);\n      console.log('Delete device:', row);\n    }\n  }\n};","map":{"version":3,"names":["name","data","devices","loading","created","fetchDevices","methods","response","$http","get","error","console","$message","formatDate","dateArray","Array","isArray","year","month","day","String","padStart","split","statusTagType","status","openAddDeviceDialog","info","handleEdit","row","log","handleDelete","warning"],"sources":["src/views/DeviceManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"device-management\">\r\n    <el-card class=\"box-card\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>设备列表</span>\r\n        <el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"openAddDeviceDialog\">添加设备</el-button>\r\n      </div>\r\n      \r\n      <el-table\r\n        :data=\"devices\"\r\n        v-loading=\"loading\"\r\n        style=\"width: 100%\"\r\n        border\r\n        stripe>\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\" sortable></el-table-column>\r\n        <el-table-column prop=\"name\" label=\"设备名称\" sortable show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"model\" label=\"型号\" width=\"150\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"type\" label=\"类型\" width=\"120\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"location\" label=\"位置\" width=\"180\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"installationDate\" label=\"安装日期\" width=\"150\" sortable>\r\n          <template slot-scope=\"scope\">\r\n            {{ formatDate(scope.row.installationDate) }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n                <el-tag :type=\"statusTagType(scope.row.status)\" size=\"medium\">{{ scope.row.status }}</el-tag>\r\n            </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"ratedPower\" label=\"额定功率(kW)\" width=\"150\" sortable></el-table-column>\r\n        <el-table-column prop=\"energyType\" label=\"能源类型\" width=\"130\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column label=\"操作\" width=\"180\" fixed=\"right\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- TODO: Add Pagination if needed -->\r\n\r\n    </el-card>\r\n\r\n    <!-- TODO: Add/Edit Device Dialog -->\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import axios from 'axios'; // Removed unused import\r\n\r\nexport default {\r\n  name: 'DeviceManagement',\r\n  data() {\r\n    return {\r\n      devices: [],\r\n      loading: false,\r\n      // Add dialog visibility and form data for add/edit later\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchDevices();\r\n  },\r\n  methods: {\r\n    async fetchDevices() {\r\n      this.loading = true;\r\n      try {\r\n        const response = await this.$http.get('/devices'); // Assumes baseURL '/api' is set for $http\r\n        this.devices = response.data || []; // Ensure devices is an array even if response.data is null/undefined\r\n      } catch (error) {\r\n        console.error(\"获取设备列表失败:\", error);\r\n        this.$message.error('获取设备列表失败，请稍后重试。');\r\n        this.devices = []; // Clear devices on error\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    formatDate(dateArray) {\r\n      if (!dateArray) return '';\r\n      // LocalDate from backend might be an array [year, month, day]\r\n      // or a string \"YYYY-MM-DD\"\r\n      if (Array.isArray(dateArray)) {\r\n        const [year, month, day] = dateArray;\r\n        return `${year}-${String(month).padStart(2, '0')}-${String(day).padStart(2, '0')}`;\r\n      } else if (typeof dateArray === 'string') {\r\n        return dateArray.split('T')[0]; // Handle ISO string if backend serializes it that way\r\n      }\r\n      return String(dateArray); // Fallback\r\n    },\r\n    statusTagType(status) {\r\n        if (status === '运行中' || status === '正常') return 'success';\r\n        if (status === '故障') return 'danger';\r\n        if (status === '维护中') return 'warning';\r\n        if (status === '停止') return 'info';\r\n        return ''; // default\r\n    },\r\n    openAddDeviceDialog() {\r\n      // TODO: Implement logic to open add device dialog\r\n      this.$message.info('添加设备功能待实现');\r\n    },\r\n    handleEdit(row) {\r\n      // TODO: Implement logic to open edit device dialog with row data\r\n      this.$message.info(`编辑设备 ${row.name} 功能待实现`);\r\n      console.log('Edit device:', row);\r\n    },\r\n    handleDelete(row) {\r\n      // TODO: Implement logic for delete confirmation and API call\r\n      this.$message.warning(`删除设备 ${row.name} 功能待实现`);\r\n      console.log('Delete device:', row);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.device-management {\r\n  padding: 20px;\r\n}\r\n.box-card {\r\n  min-height: calc(100vh - 130px); /* Adjust based on your layout's header/footer height */\r\n}\r\n.clearfix:before,\r\n.clearfix:after {\r\n  display: table;\r\n  content: \"\";\r\n}\r\n.clearfix:after {\r\n  clear: both\r\n}\r\n</style> "],"mappings":"AAiDA;;AAEA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,OAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,YAAA;EACA;EACAC,OAAA;IACA,MAAAD,aAAA;MACA,KAAAF,OAAA;MACA;QACA,MAAAI,QAAA,cAAAC,KAAA,CAAAC,GAAA;QACA,KAAAP,OAAA,GAAAK,QAAA,CAAAN,IAAA;MACA,SAAAS,KAAA;QACAC,OAAA,CAAAD,KAAA,cAAAA,KAAA;QACA,KAAAE,QAAA,CAAAF,KAAA;QACA,KAAAR,OAAA;MACA;QACA,KAAAC,OAAA;MACA;IACA;IACAU,WAAAC,SAAA;MACA,KAAAA,SAAA;MACA;MACA;MACA,IAAAC,KAAA,CAAAC,OAAA,CAAAF,SAAA;QACA,OAAAG,IAAA,EAAAC,KAAA,EAAAC,GAAA,IAAAL,SAAA;QACA,UAAAG,IAAA,IAAAG,MAAA,CAAAF,KAAA,EAAAG,QAAA,YAAAD,MAAA,CAAAD,GAAA,EAAAE,QAAA;MACA,kBAAAP,SAAA;QACA,OAAAA,SAAA,CAAAQ,KAAA;MACA;MACA,OAAAF,MAAA,CAAAN,SAAA;IACA;IACAS,cAAAC,MAAA;MACA,IAAAA,MAAA,cAAAA,MAAA;MACA,IAAAA,MAAA;MACA,IAAAA,MAAA;MACA,IAAAA,MAAA;MACA;IACA;IACAC,oBAAA;MACA;MACA,KAAAb,QAAA,CAAAc,IAAA;IACA;IACAC,WAAAC,GAAA;MACA;MACA,KAAAhB,QAAA,CAAAc,IAAA,SAAAE,GAAA,CAAA5B,IAAA;MACAW,OAAA,CAAAkB,GAAA,iBAAAD,GAAA;IACA;IACAE,aAAAF,GAAA;MACA;MACA,KAAAhB,QAAA,CAAAmB,OAAA,SAAAH,GAAA,CAAA5B,IAAA;MACAW,OAAA,CAAAkB,GAAA,mBAAAD,GAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}