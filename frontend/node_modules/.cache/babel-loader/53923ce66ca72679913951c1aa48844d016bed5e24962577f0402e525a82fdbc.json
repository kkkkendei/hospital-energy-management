{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\nconst authModule = {\n  namespaced: true,\n  state: {\n    user: null,\n    // 用户信息对象\n    token: localStorage.getItem('user-token') || '' // Restore token state\n  },\n  mutations: {\n    SET_TOKEN(state, token) {\n      // Restore SET_TOKEN\n      state.token = token;\n      localStorage.setItem('user-token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    },\n    CLEAR_TOKEN(state) {\n      // Restore CLEAR_TOKEN\n      state.token = '';\n      localStorage.removeItem('user-token');\n      delete axios.defaults.headers.common['Authorization'];\n    },\n    SET_USER(state, user) {\n      state.user = user;\n      if (user) {\n        localStorage.setItem('user-info', JSON.stringify(user));\n      } else {\n        localStorage.removeItem('user-info');\n      }\n    }\n    // CLEAR_USER is effectively SET_USER(state, null), can be removed or kept if preferred\n    // CLEAR_USER(state) { \n    //   state.user = null;\n    //   localStorage.removeItem('user-info');\n    // }\n  },\n  actions: {\n    async login({\n      commit\n    }, credentials) {\n      try {\n        const response = await axios.post('/auth/signin', credentials);\n        // Assuming backend returns JwtResponse: { token, id, username, email, roles, type (e.g. \"Bearer\") }\n        const responseData = response.data;\n        if (responseData && responseData.token && responseData.username) {\n          const user = {\n            id: responseData.id,\n            username: responseData.username,\n            email: responseData.email,\n            roles: responseData.roles\n          };\n          commit('SET_TOKEN', responseData.token); // Set the token\n          commit('SET_USER', user); // Set user info\n          return Promise.resolve(user);\n        } else {\n          throw new Error(responseData.message || 'Login failed: Invalid response from server.');\n        }\n      } catch (error) {\n        commit('CLEAR_TOKEN'); // Clear token on login failure\n        commit('SET_USER', null);\n        const errorMessage = error.response && error.response.data && error.response.data.message ? error.response.data.message : error.message || 'Login failed due to an unexpected error.';\n        return Promise.reject(new Error(errorMessage));\n      }\n    },\n    async register(_context, userData) {\n      try {\n        const response = await axios.post('/auth/signup', userData);\n        return Promise.resolve(response.data);\n      } catch (error) {\n        const errorMessage = error.response && error.response.data && error.response.data.message ? error.response.data.message : error.message || 'Registration failed due to an unexpected error.';\n        return Promise.reject(new Error(errorMessage));\n      }\n    },\n    logout({\n      commit\n    }) {\n      commit('CLEAR_TOKEN'); // Clear token from state, localStorage, and axios headers\n      commit('SET_USER', null);\n      return Promise.resolve();\n    },\n    fetchUser({\n      commit\n    }) {\n      const storedUser = localStorage.getItem('user-info');\n      const token = localStorage.getItem('user-token'); // Also check for token\n      if (token) {\n        // If token exists, set it again (e.g. on page refresh)\n        commit('SET_TOKEN', token);\n      }\n      if (storedUser) {\n        try {\n          const user = JSON.parse(storedUser);\n          commit('SET_USER', user);\n        } catch (e) {\n          localStorage.removeItem('user-info');\n          commit('CLEAR_TOKEN'); // If user info is corrupt, clear token too\n        }\n      } else if (!token) {\n        // If no user info and no token, ensure everything is cleared\n        commit('CLEAR_TOKEN');\n        commit('SET_USER', null);\n      }\n    }\n  },\n  getters: {\n    // isAuthenticated: state => !!state.user, // Now based on token presence\n    isAuthenticated: state => !!state.token,\n    // Authenticated if token exists\n    currentUser: state => state.user,\n    userRole: state => state.user && state.user.roles && state.user.roles.length > 0 ? state.user.roles[0] : null\n  }\n};\nexport default new Vuex.Store({\n  modules: {\n    auth: authModule\n  }\n  // 你可以在这里添加更多的模块\n});","map":{"version":3,"names":["Vue","Vuex","axios","use","authModule","namespaced","state","user","token","localStorage","getItem","mutations","SET_TOKEN","setItem","defaults","headers","common","CLEAR_TOKEN","removeItem","SET_USER","JSON","stringify","actions","login","commit","credentials","response","post","responseData","data","username","id","email","roles","Promise","resolve","Error","message","error","errorMessage","reject","register","_context","userData","logout","fetchUser","storedUser","parse","e","getters","isAuthenticated","currentUser","userRole","length","Store","modules","auth"],"sources":["C:/Users/吴泽宇/Desktop/医院智慧能源管理系统/hospital-energy-management/frontend/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios';\n\nVue.use(Vuex)\n\nconst authModule = {\n  namespaced: true,\n  state: {\n    user: null, // 用户信息对象\n    token: localStorage.getItem('user-token') || '' // Restore token state\n  },\n  mutations: {\n    SET_TOKEN(state, token) { // Restore SET_TOKEN\n      state.token = token;\n      localStorage.setItem('user-token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    },\n    CLEAR_TOKEN(state) { // Restore CLEAR_TOKEN\n      state.token = '';\n      localStorage.removeItem('user-token');\n      delete axios.defaults.headers.common['Authorization'];\n    },\n    SET_USER(state, user) {\n      state.user = user; \n      if (user) {\n        localStorage.setItem('user-info', JSON.stringify(user)); \n      } else {\n        localStorage.removeItem('user-info'); \n      }\n    },\n    // CLEAR_USER is effectively SET_USER(state, null), can be removed or kept if preferred\n    // CLEAR_USER(state) { \n    //   state.user = null;\n    //   localStorage.removeItem('user-info');\n    // }\n  },\n  actions: {\n    async login({ commit }, credentials) {\n      try {\n        const response = await axios.post('/auth/signin', credentials);\n        // Assuming backend returns JwtResponse: { token, id, username, email, roles, type (e.g. \"Bearer\") }\n        const responseData = response.data;\n        if (responseData && responseData.token && responseData.username) { \n          const user = {\n            id: responseData.id,\n            username: responseData.username,\n            email: responseData.email,\n            roles: responseData.roles\n          };\n          commit('SET_TOKEN', responseData.token); // Set the token\n          commit('SET_USER', user); // Set user info\n          return Promise.resolve(user);\n        } else {\n          throw new Error(responseData.message || 'Login failed: Invalid response from server.');\n        }\n      } catch (error) {\n        commit('CLEAR_TOKEN'); // Clear token on login failure\n        commit('SET_USER', null); \n        const errorMessage = error.response && error.response.data && error.response.data.message \n                           ? error.response.data.message \n                           : (error.message || 'Login failed due to an unexpected error.');\n        return Promise.reject(new Error(errorMessage));\n      }\n    },\n    async register(_context, userData) {\n      try {\n        const response = await axios.post('/auth/signup', userData);\n        return Promise.resolve(response.data); \n      } catch (error) {\n        const errorMessage = error.response && error.response.data && error.response.data.message\n                           ? error.response.data.message\n                           : (error.message || 'Registration failed due to an unexpected error.');\n        return Promise.reject(new Error(errorMessage));\n      }\n    },\n    logout({ commit }) {\n      commit('CLEAR_TOKEN'); // Clear token from state, localStorage, and axios headers\n      commit('SET_USER', null); \n      return Promise.resolve();\n    },\n    fetchUser({ commit }) { \n      const storedUser = localStorage.getItem('user-info');\n      const token = localStorage.getItem('user-token'); // Also check for token\n      if (token) { // If token exists, set it again (e.g. on page refresh)\n        commit('SET_TOKEN', token);\n      }\n      if (storedUser) {\n        try {\n          const user = JSON.parse(storedUser);\n          commit('SET_USER', user); \n        } catch (e) {\n          localStorage.removeItem('user-info'); \n          commit('CLEAR_TOKEN'); // If user info is corrupt, clear token too\n        }\n      } else if (!token) { // If no user info and no token, ensure everything is cleared\n        commit('CLEAR_TOKEN');\n        commit('SET_USER', null);\n      }\n    }\n  },\n  getters: {\n    // isAuthenticated: state => !!state.user, // Now based on token presence\n    isAuthenticated: state => !!state.token, // Authenticated if token exists\n    currentUser: state => state.user,\n    userRole: state => (state.user && state.user.roles && state.user.roles.length > 0) ? state.user.roles[0] : null\n  }\n}\n\nexport default new Vuex.Store({\n  modules: {\n    auth: authModule\n  }\n  // 你可以在这里添加更多的模块\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}