{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions } from 'vuex';\nexport default {\n  name: 'UserLogin',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      loading: false,\n      errorMessage: ''\n    };\n  },\n  methods: {\n    ...mapActions('auth', ['login']),\n    handleLogin() {\n      this.$refs.loginFormRef.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          this.errorMessage = '';\n          this.login(this.loginForm).then(() => {\n            this.loading = false;\n            this.$message.success('登录成功!');\n            const redirectPath = this.$route.query.redirect || '/app/dashboard';\n            this.$nextTick(() => {\n              this.$router.replace(redirectPath);\n            });\n          }).catch(error => {\n            this.loading = false;\n            this.errorMessage = error.response && error.response.data && error.response.data.message || '登录失败，请检查您的凭据或网络连接。';\n            this.$message.error(this.errorMessage);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    }\n  }\n};","map":{"version":3,"names":["mapActions","name","data","loginForm","username","password","loginRules","required","message","trigger","loading","errorMessage","methods","handleLogin","$refs","loginFormRef","validate","valid","login","then","$message","success","redirectPath","$route","query","redirect","$nextTick","$router","replace","catch","error","response","goToRegister","push"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\n  <el-container class=\"login-container\">\n    <el-card class=\"login-card\">\n      <h2 class=\"login-title\">医院能源管理系统 - 登录</h2>\n      <el-form :model=\"loginForm\" :rules=\"loginRules\" ref=\"loginFormRef\" @submit.native.prevent=\"handleLogin\">\n        <el-form-item prop=\"username\">\n          <el-input v-model=\"loginForm.username\" placeholder=\"用户名\" prefix-icon=\"el-icon-user\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input type=\"password\" v-model=\"loginForm.password\" placeholder=\"密码\" prefix-icon=\"el-icon-lock\" show-password></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" native-type=\"submit\" :loading=\"loading\" style=\"width:100%;\">登录</el-button>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"text\" @click=\"goToRegister\">没有账户？去注册</el-button>\n        </el-form-item>\n      </el-form>\n      <el-alert v-if=\"errorMessage\" :title=\"errorMessage\" type=\"error\" show-icon :closable=\"false\"></el-alert>\n    </el-card>\n  </el-container>\n</template>\n\n<script>\nimport { mapActions } from 'vuex';\n\nexport default {\n  name: 'UserLogin',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ]\n      },\n      loading: false,\n      errorMessage: ''\n    };\n  },\n  methods: {\n    ...mapActions('auth', ['login']),\n    handleLogin() {\n      this.$refs.loginFormRef.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          this.errorMessage = '';\n          this.login(this.loginForm)\n            .then(() => {\n              this.loading = false;\n              this.$message.success('登录成功!');\n              const redirectPath = this.$route.query.redirect || '/app/dashboard';\n              this.$nextTick(() => {\n                this.$router.replace(redirectPath);\n              });\n            })\n            .catch(error => {\n              this.loading = false;\n              this.errorMessage = (error.response && error.response.data && error.response.data.message) || '登录失败，请检查您的凭据或网络连接。';\n              this.$message.error(this.errorMessage);\n            });\n        } else {\n          return false;\n        }\n      });\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    }\n  }\n};\n</script>\n\n<style scoped>\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #f0f2f5; /* Optional: Add a background color */\n}\n\n.login-card {\n  width: 400px;\n}\n\n.login-title {\n  text-align: center;\n  margin-bottom: 20px;\n}\n</style> "],"mappings":";AAwBA,SAAAA,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,UAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,OAAA;MACAC,YAAA;IACA;EACA;EACAC,OAAA;IACA,GAAAZ,UAAA;IACAa,YAAA;MACA,KAAAC,KAAA,CAAAC,YAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAP,OAAA;UACA,KAAAC,YAAA;UACA,KAAAO,KAAA,MAAAf,SAAA,EACAgB,IAAA;YACA,KAAAT,OAAA;YACA,KAAAU,QAAA,CAAAC,OAAA;YACA,MAAAC,YAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAC,QAAA;YACA,KAAAC,SAAA;cACA,KAAAC,OAAA,CAAAC,OAAA,CAAAN,YAAA;YACA;UACA,GACAO,KAAA,CAAAC,KAAA;YACA,KAAApB,OAAA;YACA,KAAAC,YAAA,GAAAmB,KAAA,CAAAC,QAAA,IAAAD,KAAA,CAAAC,QAAA,CAAA7B,IAAA,IAAA4B,KAAA,CAAAC,QAAA,CAAA7B,IAAA,CAAAM,OAAA;YACA,KAAAY,QAAA,CAAAU,KAAA,MAAAnB,YAAA;UACA;QACA;UACA;QACA;MACA;IACA;IACAqB,aAAA;MACA,KAAAL,OAAA,CAAAM,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}